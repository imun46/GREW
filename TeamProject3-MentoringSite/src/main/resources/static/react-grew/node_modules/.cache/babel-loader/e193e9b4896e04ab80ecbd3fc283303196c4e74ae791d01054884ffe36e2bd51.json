{"ast":null,"code":"const BACKEND_SERVER = \"\";\n/*\r\nPOST /answer\r\nPUT  /answer/update/{answerNo}\r\nPUT  /answer/delete/{answerNo}\r\nPUT  /answer/accept\r\nGET  /answer/{answerNo}/answerDetail\r\nGET  /answer/answerList/{inquiryNo}/inquiryVote\r\nGET  /answer/answerList/{inquiryNo}/inquiryDate\r\nGET  /answer/answerList/{categoryNo}/categoryVote\r\nGET  /answer/answerList/{categoryNo}/categoryDate\r\nGET  /answer/answerList/recently-vote\r\n*/\n//답변 최신순\nexport const AnswerByDate = async (inquiryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/answer/${inquiryNo}/answer-date?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//답변 추천순\n_c = AnswerByDate;\nexport const AnswerByVote = async (inquiryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/answer/${inquiryNo}/answer-vote?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n_c2 = AnswerByVote;\nexport const countVote = async answerNo => {\n  const response = await fetch(`${BACKEND_SERVER}/vote/${answerNo}/votes`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\nexport const upVote = async (answerNo, memberNo) => {\n  const response = await fetch(`${BACKEND_SERVER}/vote/upvote`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      answerNo,\n      memberNo\n    }) // answerNo와 memberNo를 body에 포함\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\nexport const downVote = async () => {\n  const response = await fetch(`${BACKEND_SERVER}/vote/downvote`, {\n    method: 'POST'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerByDate\");\n$RefreshReg$(_c2, \"AnswerByVote\");","map":{"version":3,"names":["BACKEND_SERVER","AnswerByDate","inquiryNo","page","size","response","fetch","method","responseJsonObject","json","_c","AnswerByVote","_c2","countVote","answerNo","upVote","memberNo","headers","body","JSON","stringify","downVote","$RefreshReg$"],"sources":["C:/2024-07-JAVA-DEVELOPER/workspace-spring-tool-suite-4-4.24.0.RELEASE/final-project-team2/TeamProject3-MentoringSite/src/main/resources/static/react-grew/src/api/answerApi.js"],"sourcesContent":["const BACKEND_SERVER = \"\";\r\n/*\r\nPOST /answer\r\nPUT  /answer/update/{answerNo}\r\nPUT  /answer/delete/{answerNo}\r\nPUT  /answer/accept\r\nGET  /answer/{answerNo}/answerDetail\r\nGET  /answer/answerList/{inquiryNo}/inquiryVote\r\nGET  /answer/answerList/{inquiryNo}/inquiryDate\r\nGET  /answer/answerList/{categoryNo}/categoryVote\r\nGET  /answer/answerList/{categoryNo}/categoryDate\r\nGET  /answer/answerList/recently-vote\r\n*/\r\n//답변 최신순\r\nexport const AnswerByDate=async(inquiryNo,page,size)=>{\r\n    const response=await fetch(`${BACKEND_SERVER}/answer/${inquiryNo}/answer-date?page=${page}&size=${size}`,{\r\n        method:'GET'\r\n    });\r\n    const responseJsonObject=await response.json();\r\n    return responseJsonObject;\r\n}\r\n//답변 추천순\r\nexport const AnswerByVote=async(inquiryNo,page,size)=>{\r\n    const response=await fetch(`${BACKEND_SERVER}/answer/${inquiryNo}/answer-vote?page=${page}&size=${size}`,{\r\n        method:'GET'\r\n    });\r\n    const responseJsonObject=await response.json();\r\n    return responseJsonObject;\r\n}\r\nexport const countVote = async(answerNo)=>{\r\n    const response= await fetch(`${BACKEND_SERVER}/vote/${answerNo}/votes`,{\r\n        method:'GET'\r\n    });\r\n    const responseJsonObject=await response.json();\r\n    return responseJsonObject;\r\n}\r\nexport const upVote = async (answerNo, memberNo) => {\r\n    const response = await fetch(`${BACKEND_SERVER}/vote/upvote`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ answerNo, memberNo })  // answerNo와 memberNo를 body에 포함\r\n    });\r\n    const responseJsonObject = await response.json();\r\n    return responseJsonObject;\r\n}\r\nexport const downVote = async()=>{\r\n    const response= await fetch(`${BACKEND_SERVER}/vote/downvote`,{\r\n        method:'POST'\r\n    });\r\n    const responseJsonObject=await response.json();\r\n    return responseJsonObject;\r\n}\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAC,MAAAA,CAAMC,SAAS,EAACC,IAAI,EAACC,IAAI,KAAG;EAClD,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEN,cAAe,WAAUE,SAAU,qBAAoBC,IAAK,SAAQC,IAAK,EAAC,EAAC;IACrGG,MAAM,EAAC;EACX,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9C,OAAOD,kBAAkB;AAC7B,CAAC;AACD;AAAAE,EAAA,GAPaT,YAAY;AAQzB,OAAO,MAAMU,YAAY,GAAC,MAAAA,CAAMT,SAAS,EAACC,IAAI,EAACC,IAAI,KAAG;EAClD,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEN,cAAe,WAAUE,SAAU,qBAAoBC,IAAK,SAAQC,IAAK,EAAC,EAAC;IACrGG,MAAM,EAAC;EACX,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9C,OAAOD,kBAAkB;AAC7B,CAAC;AAAAI,GAAA,GANYD,YAAY;AAOzB,OAAO,MAAME,SAAS,GAAG,MAAMC,QAAQ,IAAG;EACtC,MAAMT,QAAQ,GAAE,MAAMC,KAAK,CAAE,GAAEN,cAAe,SAAQc,QAAS,QAAO,EAAC;IACnEP,MAAM,EAAC;EACX,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9C,OAAOD,kBAAkB;AAC7B,CAAC;AACD,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAOD,QAAQ,EAAEE,QAAQ,KAAK;EAChD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,cAAe,cAAa,EAAE;IAC1DO,MAAM,EAAE,MAAM;IACdU,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAEE;IAAS,CAAC,CAAC,CAAE;EAClD,CAAC,CAAC;EACF,MAAMR,kBAAkB,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChD,OAAOD,kBAAkB;AAC7B,CAAC;AACD,OAAO,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAS;EAC7B,MAAMhB,QAAQ,GAAE,MAAMC,KAAK,CAAE,GAAEN,cAAe,gBAAe,EAAC;IAC1DO,MAAM,EAAC;EACX,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9C,OAAOD,kBAAkB;AAC7B,CAAC;AAAA,IAAAE,EAAA,EAAAE,GAAA;AAAAU,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAV,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}