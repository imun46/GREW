{"ast":null,"code":"var _jsxFileName = \"/Users/jeong/git/final-project-team2/TeamProject3-MentoringSite/src/main/resources/static/react-grew/src/component/Chatting/ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  onRoomClick\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [rooms, setRooms] = useState([{\n    id: 1,\n    name: '채팅방 1'\n  }, {\n    id: 2,\n    name: '채팅방 2'\n  }, {\n    id: 3,\n    name: '채팅방 3'\n  }]);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [newRoomName, setNewRoomName] = useState('');\n  const openEditModal = room => {\n    setCurrentRoom(room);\n    setNewRoomName(room.name);\n    setIsModalOpen(true);\n  };\n  const saveRoomName = () => {\n    if (currentRoom && newRoomName.trim()) {\n      setRooms(prevRooms => prevRooms.map(room => room.id === currentRoom.id ? {\n        ...room,\n        name: newRoomName.trim()\n      } : room));\n      setIsModalOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uCC44\\uD305\\uBC29 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-room-list\",\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat-room-item\",\n          onClick: () => onRoomClick(room.id),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room-name\",\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: e => {\n              e.stopPropagation();\n              openEditModal(room);\n            },\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, room.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal ${isModalOpen ? 'active' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"\\uCC44\\uD305\\uBC29 \\uC774\\uB984 \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newRoomName,\n          onChange: e => setNewRoomName(e.target.value),\n          placeholder: \"\\uC0C8 \\uCC44\\uD305\\uBC29 \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveRoomName,\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsModalOpen(false) // 닫기 버튼 추가\n          ,\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"ZiaCWgUI5EkpL/9YW/qTgjD6UWQ=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatRoom","onRoomClick","_s","isModalOpen","setIsModalOpen","rooms","setRooms","id","name","currentRoom","setCurrentRoom","newRoomName","setNewRoomName","openEditModal","room","saveRoomName","trim","prevRooms","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","stopPropagation","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/jeong/git/final-project-team2/TeamProject3-MentoringSite/src/main/resources/static/react-grew/src/component/Chatting/ChatRoom.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ChatRoom = ({ onRoomClick }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [rooms, setRooms] = useState([\n        { id: 1, name: '채팅방 1' },\n        { id: 2, name: '채팅방 2' },\n        { id: 3, name: '채팅방 3' },\n    ]);\n    \n    const [currentRoom, setCurrentRoom] = useState(null);\n    const [newRoomName, setNewRoomName] = useState('');\n    const openEditModal = (room) => {\n        setCurrentRoom(room);\n        setNewRoomName(room.name);\n        setIsModalOpen(true);\n    };\n\n    const saveRoomName = () => {\n        if (currentRoom && newRoomName.trim()) {\n            setRooms((prevRooms) =>\n                prevRooms.map((room) =>\n                    room.id === currentRoom.id\n                        ? { ...room, name: newRoomName.trim() }\n                        : room\n                )\n            );\n            setIsModalOpen(false);\n        }\n    };\n    \n\n    return (\n        <div>\n            {/* Panel */}\n            <div>\n                <div className=\"chat-header\">채팅방 목록</div>\n                <ul className=\"chat-room-list\">\n                    {rooms.map((room) => (\n                        <li\n                            key={room.id}\n                            className=\"chat-room-item\"\n                            onClick={() => onRoomClick(room.id)}\n                        >\n                            <span className=\"room-name\">{room.name}</span>\n                            <button\n                                className=\"edit-button\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    openEditModal(room);\n                                }}\n                            >\n                                수정\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* Modal for Editing Room Name */}\n            {isModalOpen && (\n                <div className={`modal ${isModalOpen ? 'active' : ''}`}>\n                    <div\n                        className=\"modal-content\"\n                        onClick={(e) => e.stopPropagation()}\n                    >\n                        <div className=\"modal-header\">채팅방 이름 변경</div>\n                        <input\n                            type=\"text\"\n                            value={newRoomName}\n                            onChange={(e) => setNewRoomName(e.target.value)}\n                            placeholder=\"새 채팅방 이름\"\n                        />\n                        <button onClick={saveRoomName}>저장</button>\n                        <button\n                            className=\"close-button\"\n                            onClick={() => setIsModalOpen(false)} // 닫기 버튼 추가\n                        >\n                            닫기\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}