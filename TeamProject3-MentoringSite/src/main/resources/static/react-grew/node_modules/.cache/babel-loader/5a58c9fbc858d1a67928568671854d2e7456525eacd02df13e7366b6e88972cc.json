{"ast":null,"code":"var _jsxFileName = \"/Users/jeong/git/final-project-team2/TeamProject3-MentoringSite/src/main/resources/static/react-grew/src/component/Chatting/ChatAlarim.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../css/ChatApp.css'; // CSS를 별도 파일로 분리\nimport ChattingMessage from './Chatting.jsx';\nimport ChatRoom from './ChatRoom.jsx';\nimport Alarim from '../Alarim.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatAlarim = () => {\n  _s();\n  const [activePanel, setActivePanel] = useState(null); //패널을 열때 chat 또는 notification인지 구분하는 용도\n  const [roomId, setRoomId] = useState(null); // 선택된 roomId 상태\n\n  const togglePanel = panel => {\n    //chat 또는 notification를 확인하여 슬라이드 패널을 열고 닫음\n    setActivePanel(prevPanel => prevPanel === panel ? null : panel);\n  };\n  const openChatting = roomId => {\n    setRoomId(roomId); // 선택된 roomId 설정\n    setActivePanel('ChattingMessage');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-panel ${activePanel ? 'open' : ''}`,\n      children: [activePanel === 'chat' && /*#__PURE__*/_jsxDEV(ChatRoom, {\n        onRoomClick: openChatting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), activePanel === 'notification' && /*#__PURE__*/_jsxDEV(Alarim, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), activePanel === 'ChattingMessage' && /*#__PURE__*/_jsxDEV(ChattingMessage, {\n        roomId: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-button ${activePanel === 'chat' ? 'panel-open' : ''}`,\n      onClick: () => togglePanel('chat'),\n      children: \"\\uCC57\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification-button ${activePanel === 'notification' ? 'panel-open' : ''}`,\n      onClick: () => togglePanel('notification'),\n      children: \"\\uC54C\\uB9BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatAlarim, \"J5cp3SNBGrrL2LK3MFVZUMsOS0Q=\");\n_c = ChatAlarim;\nexport default ChatAlarim;\nvar _c;\n$RefreshReg$(_c, \"ChatAlarim\");","map":{"version":3,"names":["React","useState","ChattingMessage","ChatRoom","Alarim","jsxDEV","_jsxDEV","ChatAlarim","_s","activePanel","setActivePanel","roomId","setRoomId","togglePanel","panel","prevPanel","openChatting","children","className","onRoomClick","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jeong/git/final-project-team2/TeamProject3-MentoringSite/src/main/resources/static/react-grew/src/component/Chatting/ChatAlarim.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../../css/ChatApp.css'; // CSS를 별도 파일로 분리\nimport ChattingMessage from './Chatting.jsx';\nimport ChatRoom from './ChatRoom.jsx';\nimport Alarim from '../Alarim.jsx';\n\nconst ChatAlarim = () => {\n    const [activePanel, setActivePanel] = useState(null); //패널을 열때 chat 또는 notification인지 구분하는 용도\n    const [roomId, setRoomId] = useState(null); // 선택된 roomId 상태\n\n    const togglePanel = (panel) => {    //chat 또는 notification를 확인하여 슬라이드 패널을 열고 닫음\n        setActivePanel((prevPanel) => (prevPanel === panel ? null : panel));\n    };\n    const openChatting = (roomId) => {\n        setRoomId(roomId); // 선택된 roomId 설정\n        setActivePanel('ChattingMessage');\n    };\n\n    return (\n        <div>\n            {/* Panel */}\n            <div className={`chat-panel ${activePanel ? 'open' : ''}`}>\n                {activePanel === 'chat' && (\n                    <ChatRoom onRoomClick={openChatting}/>\n                )}\n                {activePanel === 'notification' && (\n                    <Alarim/>\n                )}\n                {activePanel === 'ChattingMessage' && (\n                    <ChattingMessage roomId={roomId}/>\n                )}\n            </div>\n\n            {/* Chat Button */}\n            <div\n                className={`chat-button ${activePanel === 'chat' ? 'panel-open' : ''}`}\n                onClick={() => togglePanel('chat')}\n            >\n                챗\n            </div>\n\n            {/* Notification Button */}\n            <div\n                className={`notification-button ${activePanel === 'notification' ? 'panel-open' : ''}`}\n                onClick={() => togglePanel('notification')}\n            >\n                알림\n            </div>\n\n        </div>\n    );\n};\n\nexport default ChatAlarim;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB,CAAC,CAAC;AAChC,OAAOC,eAAe,MAAM,gBAAgB;AAC5C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C,MAAMY,WAAW,GAAIC,KAAK,IAAK;IAAK;IAChCJ,cAAc,CAAEK,SAAS,IAAMA,SAAS,KAAKD,KAAK,GAAG,IAAI,GAAGA,KAAM,CAAC;EACvE,CAAC;EACD,MAAME,YAAY,GAAIL,MAAM,IAAK;IAC7BC,SAAS,CAACD,MAAM,CAAC,CAAC,CAAC;IACnBD,cAAc,CAAC,iBAAiB,CAAC;EACrC,CAAC;EAED,oBACIJ,OAAA;IAAAW,QAAA,gBAEIX,OAAA;MAAKY,SAAS,EAAG,cAAaT,WAAW,GAAG,MAAM,GAAG,EAAG,EAAE;MAAAQ,QAAA,GACrDR,WAAW,KAAK,MAAM,iBACnBH,OAAA,CAACH,QAAQ;QAACgB,WAAW,EAAEH;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACxC,EACAd,WAAW,KAAK,cAAc,iBAC3BH,OAAA,CAACF,MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACX,EACAd,WAAW,KAAK,iBAAiB,iBAC9BH,OAAA,CAACJ,eAAe;QAACS,MAAM,EAAEA;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACpC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGNjB,OAAA;MACIY,SAAS,EAAG,eAAcT,WAAW,KAAK,MAAM,GAAG,YAAY,GAAG,EAAG,EAAE;MACvEe,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAAC,MAAM,CAAE;MAAAI,QAAA,EACtC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGNjB,OAAA;MACIY,SAAS,EAAG,uBAAsBT,WAAW,KAAK,cAAc,GAAG,YAAY,GAAG,EAAG,EAAE;MACvFe,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAAC,cAAc,CAAE;MAAAI,QAAA,EAC9C;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAACf,EAAA,CA7CID,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}