{"ast":null,"code":"const BACKEND_SERVER = \"\";\n/*\nPOST /inquiry                         :질문쓰기\nPUT  /inquiry/update/{inquiryNo}      :질문수정\nPUT  /inquiry/increase/{inquiryNo}    :조회수증가\nPUT  /inquiry/delete/{inquiryNo}      :질문삭제(상태변경)\nGET  /inquiry/{inquiryNo}             :질문한개보기\nGET  /inquiry/viewCount               :조회수 순으로 전체 질문출력\nGET  /inquiry/viewCount/{categoryNo}  :조회수 순으로 카테고리별 질문출력\nGET  /inquiry/answerCount             :답변수 순으로 전체 질문출력\nGET  /inquiry/answerCount/{categoryNo}:답변수 순으로 카테고리별 질문출력\nGET  /inquiry/search/{search}         :질문 검색\n\n*/\n//질문수정\nexport const updateInquiry = async sendJsonObject => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/update/${sendJsonObject.inquiryNo}`, {\n    method: 'PUT',\n    // HTTP 메서드\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\" // 요청 헤더 설정\n    },\n    body: JSON.stringify(sendJsonObject) // 요청 본문에 JSON 객체 전달\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//질문삭제(상태변경)\nexport const deleteInquiry = async inquiryNo => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/delete/${inquiryNo}`, {\n    method: 'PUT'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//조회수증가\nexport const increaseView = async inquiryNo => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/increase/${inquiryNo}`, {\n    method: 'PUT'\n  });\n};\n//질문전체조회수정렬\nexport const listInquiryView = async (page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/view-count?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//질문전체답변수정렬\nexport const listInquiryAnswer = async (page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/answer-count?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//질문전체최신순정렬\nexport const listInquiryDate = async (page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/date?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//질문하나보기\nexport const viewInquiry = async inquiryNo => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/view/${inquiryNo}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//질문등록\nexport const writeInquiry = async sendJsonObject => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry`, {\n    method: 'POST',\n    // HTTP 메서드\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\" // 요청 헤더 설정\n    },\n    body: JSON.stringify(sendJsonObject) // 요청 본문에 JSON 객체 전달\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별최신순\nexport const listInquiryByCategoryDate = async (categoryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/date?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별답변많은순\nexport const listInquiryByCategoryAnswer = async (categoryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/answer-count?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별조회순\nexport const listInquiryByCategoryView = async (categoryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/view-count?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별(대분류)최신순\nexport const listInquiryByParentCategoryDate = async (categoryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/parent/date?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별(대분류)답변많은순\nexport const listInquiryByParentCategoryAnswer = async (categoryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/parent/answer-count?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별(대분류)조회순\nexport const listInquiryByParentCategoryView = async (categoryNo, page, size) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/parent/view-count?page=${page}&size=${size}`, {\n    method: 'GET'\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};","map":{"version":3,"names":["BACKEND_SERVER","updateInquiry","sendJsonObject","response","fetch","inquiryNo","method","headers","body","JSON","stringify","responseJsonObject","json","deleteInquiry","increaseView","listInquiryView","page","size","listInquiryAnswer","listInquiryDate","viewInquiry","writeInquiry","listInquiryByCategoryDate","categoryNo","listInquiryByCategoryAnswer","listInquiryByCategoryView","listInquiryByParentCategoryDate","listInquiryByParentCategoryAnswer","listInquiryByParentCategoryView"],"sources":["/Users/jeong/git/final-project-team2/TeamProject3-MentoringSite/src/main/resources/static/react-grew/src/api/inquiryApi.js"],"sourcesContent":["const BACKEND_SERVER = \"\";\n/*\nPOST /inquiry                         :질문쓰기\nPUT  /inquiry/update/{inquiryNo}      :질문수정\nPUT  /inquiry/increase/{inquiryNo}    :조회수증가\nPUT  /inquiry/delete/{inquiryNo}      :질문삭제(상태변경)\nGET  /inquiry/{inquiryNo}             :질문한개보기\nGET  /inquiry/viewCount               :조회수 순으로 전체 질문출력\nGET  /inquiry/viewCount/{categoryNo}  :조회수 순으로 카테고리별 질문출력\nGET  /inquiry/answerCount             :답변수 순으로 전체 질문출력\nGET  /inquiry/answerCount/{categoryNo}:답변수 순으로 카테고리별 질문출력\nGET  /inquiry/search/{search}         :질문 검색\n\n*/\n//질문수정\nexport const updateInquiry = async(sendJsonObject)=>{\n   const response = await fetch(`${BACKEND_SERVER}/inquiry/update/${sendJsonObject.inquiryNo}`, {\n      method: 'PUT', // HTTP 메서드\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\", // 요청 헤더 설정\n      },\n      body: JSON.stringify(sendJsonObject), // 요청 본문에 JSON 객체 전달\n    });\n    const responseJsonObject = await response.json();\n    return responseJsonObject;\n}\n//질문삭제(상태변경)\nexport const deleteInquiry = async(inquiryNo)=>{\n   const response = await fetch(`${BACKEND_SERVER}/inquiry/delete/${inquiryNo}`,{\n      method:'PUT'\n   });\n   const responseJsonObject=await response.json();\n   return responseJsonObject;\n}\n//조회수증가\nexport const increaseView = async(inquiryNo)=>{\n   const response = await fetch(`${BACKEND_SERVER}/inquiry/increase/${inquiryNo}`,{\n      method:'PUT'\n   });\n}\n//질문전체조회수정렬\nexport const listInquiryView=async (page,size)=>{\n    const response=await fetch(`${BACKEND_SERVER}/inquiry/view-count?page=${page}&size=${size}`,{\n       method:'GET'\n    });\n    const responseJsonObject= await response.json();\n    return responseJsonObject;\n }\n//질문전체답변수정렬\nexport const listInquiryAnswer=async (page,size)=>{\n    const response=await fetch(`${BACKEND_SERVER}/inquiry/answer-count?page=${page}&size=${size}`,{\n       method:'GET'\n    });\n    const responseJsonObject= await response.json();\n    return responseJsonObject;\n }\n//질문전체최신순정렬\nexport const listInquiryDate=async (page,size)=>{\n    const response=await fetch(`${BACKEND_SERVER}/inquiry/date?page=${page}&size=${size}`,{\n       method:'GET'\n    });\n    const responseJsonObject= await response.json();\n    return responseJsonObject;\n }\n //질문하나보기\n export const viewInquiry=async (inquiryNo)=>{\n    const response=await fetch(`${BACKEND_SERVER}/inquiry/view/${inquiryNo}`,{\n       method:'GET'\n    });\n    const responseJsonObject= await response.json();\n    return responseJsonObject;\n }\n //질문등록\nexport const writeInquiry = async (sendJsonObject) => {\n  const response = await fetch(`${BACKEND_SERVER}/inquiry`, {\n    method: 'POST', // HTTP 메서드\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\", // 요청 헤더 설정\n    },\n    body: JSON.stringify(sendJsonObject), // 요청 본문에 JSON 객체 전달\n  });\n  const responseJsonObject = await response.json();\n  return responseJsonObject;\n};\n//전체질문카테고리별최신순\nexport const listInquiryByCategoryDate=async (categoryNo,page,size)=>{\n   const response=await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/date?page=${page}&size=${size}`,{\n      method:'GET'\n   });\n   const responseJsonObject= await response.json();\n   return responseJsonObject;\n}\n//전체질문카테고리별답변많은순\nexport const listInquiryByCategoryAnswer=async (categoryNo,page,size)=>{\n   const response=await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/answer-count?page=${page}&size=${size}`,{\n      method:'GET'\n   });\n   const responseJsonObject= await response.json();\n   return responseJsonObject;\n}\n//전체질문카테고리별조회순\nexport const listInquiryByCategoryView=async (categoryNo,page,size)=>{\n   const response=await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/view-count?page=${page}&size=${size}`,{\n      method:'GET'\n   });\n   const responseJsonObject= await response.json();\n   return responseJsonObject;\n}\n//전체질문카테고리별(대분류)최신순\nexport const listInquiryByParentCategoryDate=async (categoryNo,page,size)=>{\n   const response=await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/parent/date?page=${page}&size=${size}`,{\n      method:'GET'\n   });\n   const responseJsonObject= await response.json();\n   return responseJsonObject;\n}\n//전체질문카테고리별(대분류)답변많은순\nexport const listInquiryByParentCategoryAnswer=async (categoryNo,page,size)=>{\n   const response=await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/parent/answer-count?page=${page}&size=${size}`,{\n      method:'GET'\n   });\n   const responseJsonObject= await response.json();\n   return responseJsonObject;\n}\n//전체질문카테고리별(대분류)조회순\nexport const listInquiryByParentCategoryView=async (categoryNo,page,size)=>{\n   const response=await fetch(`${BACKEND_SERVER}/inquiry/${categoryNo}/parent/view-count?page=${page}&size=${size}`,{\n      method:'GET'\n   });\n   const responseJsonObject= await response.json();\n   return responseJsonObject;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}