Index: TeamProject3-MentoringSite/src/main/java/com/itwill/jpa/entity/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.itwill.jpa.entity;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport org.aspectj.weaver.patterns.TypePatternQuestions.Question;\r\n\r\nimport com.itwill.jpa.dto.MemberDto;\r\n\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.FetchType;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.OneToMany;\r\nimport jakarta.persistence.OneToOne;\r\nimport jakarta.persistence.SequenceGenerator;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n\r\n@Builder\r\n@Data\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n\r\n@Entity\r\npublic class Member {\r\n\t\r\n\r\n\t@Id//PK설정\r\n\t@SequenceGenerator(name = \"member_seq\", initialValue = 1, allocationSize = 1)\r\n\t@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"member_seq\")\r\n\tprivate Long memberNo;//멤버 번호 PK\r\n\t\r\n\tprivate String memberId;\r\n\tprivate String memberPassword;\r\n\tprivate String memberEmail;\r\n\tprivate String memberName;\r\n\t\r\n\t\r\n\tprivate String memberRole;//역할\r\n\t\r\n\tprivate Integer memberPoints;//멤버 연필 포인트\r\n\t\r\n\tprivate String memberStatus;//멤버의 상태(활동, 정지 등)\r\n\t\r\n\tprivate LocalDate memberJoinDate;//멤버 가입 날짜\r\n\t\r\n\tprivate Integer memberReportCount;//신고 당한 횟수\r\n\t\r\n\t /*\r\n     * DTO -> Entitiy\r\n     */\r\n\tpublic static Member toEntity(MemberDto memberDto) {\r\n\t    return Member.builder()\r\n\t            .memberId(memberDto.getMemberId())\r\n\t            .memberPassword(memberDto.getMemberPassword())\r\n\t            .memberEmail(memberDto.getMemberEmail())\r\n\t            .memberName(memberDto.getMemberName())\r\n\t            .build();\r\n\t}\r\n\t\r\n\t/*\r\n\t * fetch = FetchType.LAZY\r\n\t * cascade = CascadeType.ALL\r\n\t * 사용 여부 체크\r\n\t */\r\n\t\r\n\t/* 한 명의 유저가 멘토 프로필은 한개 보유 가능 */\r\n\t@OneToOne(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate MentorProfile mentorProfile;\r\n\r\n\t/* 한 명의 유저가 관심사 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<Interest> interests = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저가 멘트 게시글은 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<MentorBoard> mentorBoards = new ArrayList<>();\r\n\t\r\n\t/* (멘토)한 명의 유저가 팔로우는 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"followerMember\", fetch = FetchType.LAZY)\r\n\tprivate List<Follow> followers = new ArrayList<>();\r\n\t\r\n\t/* (멘티)한 명의 유저가 팔로우는 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"followedMember\", fetch = FetchType.LAZY)\r\n\tprivate List<Follow> followeds = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저가 신고는 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<Report> reports = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저가 채팅방은 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<ChatMessage> chatMessages = new ArrayList<>();\r\n\t\r\n\t/***** 한 명의 유저가 채팅방의 상태는 여러개 보유 가능?? *****/\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<ChatRoomStatus> chatRoomStatus = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저가 채팅방 신청 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<MentoringRequest> mentoringRequests = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저가 채팅방 좋아요/싫어요 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<Vote> votes = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저가 알람 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<Alarm> alarms = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저(멘티)가 질문글 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<Question> questions = new ArrayList<>();\r\n\t\r\n\t/* 한 명의 유저(멘토)가 답변글 여러개 보유 가능 */\r\n\t@OneToMany(mappedBy = \"member\", fetch = FetchType.LAZY)\r\n\tprivate List<Answer> answers = new ArrayList<>();\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamProject3-MentoringSite/src/main/java/com/itwill/jpa/entity/Member.java b/TeamProject3-MentoringSite/src/main/java/com/itwill/jpa/entity/Member.java
--- a/TeamProject3-MentoringSite/src/main/java/com/itwill/jpa/entity/Member.java	(revision a09b2e81a02b2420610c9cda55e5e569e38543b2)
+++ b/TeamProject3-MentoringSite/src/main/java/com/itwill/jpa/entity/Member.java	(date 1733061852169)
@@ -116,7 +116,7 @@
 	
 	/* 한 명의 유저(멘티)가 질문글 여러개 보유 가능 */
 	@OneToMany(mappedBy = "member", fetch = FetchType.LAZY)
-	private List<Question> questions = new ArrayList<>();
+	private List<Inquiry> inquirys = new ArrayList<>();
 	
 	/* 한 명의 유저(멘토)가 답변글 여러개 보유 가능 */
 	@OneToMany(mappedBy = "member", fetch = FetchType.LAZY)
